name: Run Monthly Predictions

on:
  schedule:
    - cron: '*/15 * * * *'  # Monthly at midnight on the 1st
  workflow_dispatch:

jobs:
  run-prediction:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install papermill pandas tensorflow numpy jupyter
          python -m ipykernel install --user --name python3 --display-name "Python 3"

      - name: Run prediction notebook
        run: |
          export TF_CPP_MIN_LOG_LEVEL=2
          papermill docker/notebooks/generate_predictions.ipynb docker/notebooks/output_predictions.ipynb -p cwd .
          
          # Verify output was created
          MONTH_STR=$(date +"%Y_%m")
          if [ ! -f "data/predictions_${MONTH_STR}.csv" ]; then
            echo "::error::Prediction file not generated!"
            exit 1
          fi

      - name: Combine predictions
        run: |
          # Get current month's file
          CURRENT_FILE="data/predictions_$(date +'%Y_%m').csv"
          
          # Check if master file exists
          if [ -f "data/predictions.csv" ]; then
            echo "Appending new predictions to master file"
            # Verify headers match
            if ! diff <(head -1 "$CURRENT_FILE") <(head -1 "data/predictions.csv"); then
              echo "::error::CSV headers don't match!"
              exit 1
            fi
            # Append data (skip header)
            tail -n +2 "$CURRENT_FILE" >> "data/predictions.csv"
          else
            echo "Creating new master predictions file"
            cp "$CURRENT_FILE" "data/predictions.csv"
          fi

      - name: Archive monthly file
        run: |
          mkdir -p data/archive
          mv "data/predictions_$(date +'%Y_%m').csv" "data/archive/"

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git pull --ff-only
          git add data/predictions.csv
          git add data/archive/
          git commit -m "Update predictions for $(date +'%Y-%m')" || echo "No changes to commit"
          git push origin ${{ github.ref }}
