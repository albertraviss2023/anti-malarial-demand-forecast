services:
  flink-jobmanager:
    image: custom-flink:local
    build:
      context: ./flink
    command: jobmanager
    ports:
      - "8083:8081"  # Host:Container
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        rest.port: 8081
        taskmanager.numberOfTaskSlots: 2
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      ICEBERG_CATALOG_URI: ${ICEBERG_CATALOG_URI}
    volumes:
      - ./flink/conf:/opt/flink/conf
    depends_on:
      - minio
      - kafka
      - iceberg-rest
    networks:
      - pipeline_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  flink-taskmanager:
    image: custom-flink:local
    build:
      context: ./flink
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      ICEBERG_CATALOG_URI: ${ICEBERG_CATALOG_URI}
    volumes:
      - ./flink/conf:/opt/flink/conf
    depends_on:
      - flink-jobmanager
    networks:
      - pipeline_net
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  pipeline_net:
    external: true
